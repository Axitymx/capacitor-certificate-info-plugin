{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"AAAA,uCAAuC","sourcesContent":["/// <reference types=\"@capacitor/cli\"/>\n\ndeclare module '@capacitor/cli' {\n  export interface PluginsConfig {\n    CertificateInfo?: {\n      /**\n       * Path where certificates are stored within the application. Must start with *public/*. The path must be define in Angular.json file.\n       *\n       * @default \"public/certificates\"\n       */\n      certificatesPath?: string;\n\n\n      /**\n       * Only for Android.\n       * The format of the output file. Check the [documentation](https://docs.oracle.com/en/java/javase/11/docs/api/java.base/java/text/SimpleDateFormat.html) to get more information. The default value use the **ISO8601** format,\n       * \n       * @default \"yyyy-MM-dd'T'HH:mm:ss'Z'\" \n       */\n      dateFormat?:string;\n    };\n  }\n}\n\nexport type CertFilename = {\n  /**\n   * Name of the certification file\n   */\n  filename: string;\n}\n\nexport type CertExpiration = {\n  /**\n   * Expiration date in ISO 8601 format\n   */\n  expirationDate:string;\n}\n\nexport type CertExpirations = {\n  /**\n   * List of expiration dates in ISO 8601 format\n   */\n  expirationDates: string [];\n}\n\nexport type CertDate = {\n  /**\n   * Date in format ISO 8601\n   */\n  date:string;\n}\n\nexport type CertValid = {\n  /**\n   * Status of the certificate\n   */\n  valid: boolean; \n}\n\nexport interface CertificateInfoPlugin {\n\n  /**\n   * Get the expiration date of the certification file. \n   * @param params CertFile\n   */\n  getExpirationDate(params: CertFilename): Promise<CertExpiration>;\n\n  /**\n   * Get the expiration date of each file in the certificate directory.\n   */\n  getExpirationDates(): Promise<CertExpirations>;\n\n  /**\n   * Check if any certificate in directory is valid compared to today. If param is define, check each certificate with the given date.\n   * @param params CertDate | undefined\n   */\n  checkValidation(params?:CertDate): Promise<CertValid>;\n}\n"]}